# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint-auth-server:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        curl -o- -L https://yarnpkg.com/install.sh | bash
        export PATH=$HOME/.yarn/bin:$PATH
        cd auth-server
        yarn install
        yarn lint
        yarn tsc

  lint-chain-db-watcher:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Setup Node.js environment
      uses: actions/setup-node@v2
      with:
        # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
        node-version: 14 # optional

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        curl -o- -L https://yarnpkg.com/install.sh | bash
        export PATH=$HOME/.yarn/bin:$PATH
        cd chain-db-watcher
        yarn install
        yarn lint
        yarn tsc

  lint-front-end:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Setup Node.js environment
      uses: actions/setup-node@v2
      with:
        # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
        node-version: 14 # optional

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        curl -o- -L https://yarnpkg.com/install.sh | bash
        export PATH=$HOME/.yarn/bin:$PATH
        cd front-end
        yarn install
        yarn lint
        yarn tsc

  build-auth-server:
    needs: [lint-auth-server]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Build and push auth-server
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: niklabh # optional
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }} # optional
        # Server address of Docker registry. If not set then will default to Docker Hub
        # registry: # optional
        # Docker repository to tag the image with
        repository: niklabh/polkassembly-auth-server
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: latest # optional
        # Automatically tags the built image with the git reference as per the readme
        tag_with_ref: true # optional
        # Automatically tags the built image with the git short SHA as per the readme
        tag_with_sha: true # optional
        # Path to the build context
        path: auth-server
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        # dockerfile: # optional
        # Sets the target stage to build
        # target: # optional
        # Always attempt to pull a newer version of the image
        always_pull: true # optional
        # Comma-delimited list of build-time variables
        # build_args: # optional
        # Comma-delimited list of images to consider as cache sources
        # cache_froms: # optional
        # Comma-delimited list of labels to add to the built image
        # labels: # optional
        # Adds labels with git repository information to the built image
        # add_git_labels: # optional
        # Whether to push the image
        # push: # optional, default is true

  build-kusama-test-front-end:
    needs: [lint-front-end]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Build and push kusama-production-front-end
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: niklabh # optional
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }} # optional
        # Server address of Docker registry. If not set then will default to Docker Hub
        # registry: # optional
        # Docker repository to tag the image with
        repository: niklabh/polkassembly-kusama-test-front-end
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: latest # optional
        # Automatically tags the built image with the git reference as per the readme
        tag_with_ref: true # optional
        # Automatically tags the built image with the git short SHA as per the readme
        tag_with_sha: true # optional
        # Path to the build context
        path: front-end
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        # dockerfile: # optional
        # Sets the target stage to build
        # target: # optional
        # Always attempt to pull a newer version of the image
        always_pull: true # optional
        # Comma-delimited list of build-time variables
        build_args: REACT_APP_ENV=production,REACT_APP_HASURA_GRAPHQL_URL=https://test.polkassembly.io/v1/graphql,REACT_APP_JWT_PUBLIC_KEY=${{ secrets.KUSAMA_JWT_PUBLIC_KEY }},REACT_APP_NETWORK=kusama,REACT_APP_WS_PROVIDER=wss://kusama-rpc.polkadot.io
        # Comma-delimited list of images to consider as cache sources
        # cache_froms: # optional
        # Comma-delimited list of labels to add to the built image
        # labels: # optional
        # Adds labels with git repository information to the built image
        # add_git_labels: # optional
        # Whether to push the image
        # push: # optional, default is true

  build-kusama-production-front-end:
    needs: [lint-front-end]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Build and push kusama-production-front-end
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: niklabh # optional
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }} # optional
        # Server address of Docker registry. If not set then will default to Docker Hub
        # registry: # optional
        # Docker repository to tag the image with
        repository: niklabh/polkassembly-kusama-production-front-end
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: latest # optional
        # Automatically tags the built image with the git reference as per the readme
        tag_with_ref: true # optional
        # Automatically tags the built image with the git short SHA as per the readme
        tag_with_sha: true # optional
        # Path to the build context
        path: front-end
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        # dockerfile: # optional
        # Sets the target stage to build
        # target: # optional
        # Always attempt to pull a newer version of the image
        always_pull: true # optional
        # Comma-delimited list of build-time variables
        build_args: REACT_APP_ENV=production,REACT_APP_HASURA_GRAPHQL_URL=https://kusama.polkassembly.io/v1/graphql,REACT_APP_JWT_PUBLIC_KEY=${{ secrets.KUSAMA_JWT_PUBLIC_KEY }},REACT_APP_NETWORK=kusama,REACT_APP_WS_PROVIDER=wss://kusama-rpc.polkadot.io
        # Comma-delimited list of images to consider as cache sources
        # cache_froms: # optional
        # Comma-delimited list of labels to add to the built image
        # labels: # optional
        # Adds labels with git repository information to the built image
        # add_git_labels: # optional
        # Whether to push the image
        # push: # optional, default is true

  build-polkadot-production-front-end:
    needs: [lint-front-end]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Build and push polkadot-production-front-end
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: niklabh # optional
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }} # optional
        # Server address of Docker registry. If not set then will default to Docker Hub
        # registry: # optional
        # Docker repository to tag the image with
        repository: niklabh/polkassembly-polkadot-production-front-end
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: latest # optional
        # Automatically tags the built image with the git reference as per the readme
        tag_with_ref: true # optional
        # Automatically tags the built image with the git short SHA as per the readme
        tag_with_sha: true # optional
        # Path to the build context
        path: front-end
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        # dockerfile: # optional
        # Sets the target stage to build
        # target: # optional
        # Always attempt to pull a newer version of the image
        always_pull: true # optional
        # Comma-delimited list of build-time variables
        build_args: REACT_APP_ENV=production,REACT_APP_HASURA_GRAPHQL_URL=https://polkadot.polkassembly.io/v1/graphql,REACT_APP_JWT_PUBLIC_KEY=${{ secrets.POLKADOT_JWT_PUBLIC_KEY }},REACT_APP_NETWORK=polkadot,REACT_APP_WS_PROVIDER=wss://rpc.polkadot.io
        # Comma-delimited list of images to consider as cache sources
        # cache_froms: # optional
        # Comma-delimited list of labels to add to the built image
        # labels: # optional
        # Adds labels with git repository information to the built image
        # add_git_labels: # optional
        # Whether to push the image
        # push: # optional, default is true


  build-chain-db-open-server:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Build and push chain-db-open-server
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: niklabh # optional
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }} # optional
        # Server address of Docker registry. If not set then will default to Docker Hub
        # registry: # optional
        # Docker repository to tag the image with
        repository: niklabh/polkassembly-chain-db-open-server
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: latest # optional
        # Automatically tags the built image with the git reference as per the readme
        tag_with_ref: true # optional
        # Automatically tags the built image with the git short SHA as per the readme
        tag_with_sha: true # optional
        # Path to the build context
        path: chain-db-open-server
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        # dockerfile: # optional
        # Sets the target stage to build
        # target: # optional
        # Always attempt to pull a newer version of the image
        always_pull: true # optional
        # Comma-delimited list of build-time variables
        # build_args: # optional
        # Comma-delimited list of images to consider as cache sources
        # cache_froms: # optional
        # Comma-delimited list of labels to add to the built image
        # labels: # optional
        # Adds labels with git repository information to the built image
        # add_git_labels: # optional
        # Whether to push the image
        # push: # optional, default is true
  
  build-chain-db-watcher:
    needs: [lint-chain-db-watcher]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Build and push chain-db-watcher
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: niklabh # optional
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }} # optional
        # Server address of Docker registry. If not set then will default to Docker Hub
        # registry: # optional
        # Docker repository to tag the image with
        repository: niklabh/polkassembly-chain-db-watcher
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: latest # optional
        # Automatically tags the built image with the git reference as per the readme
        tag_with_ref: true # optional
        # Automatically tags the built image with the git short SHA as per the readme
        tag_with_sha: true # optional
        # Path to the build context
        path: chain-db-watcher
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        # dockerfile: # optional
        # Sets the target stage to build
        # target: # optional
        # Always attempt to pull a newer version of the image
        always_pull: true # optional
        # Comma-delimited list of build-time variables
        # build_args: # optional
        # Comma-delimited list of images to consider as cache sources
        # cache_froms: # optional
        # Comma-delimited list of labels to add to the built image
        # labels: # optional
        # Adds labels with git repository information to the built image
        # add_git_labels: # optional
        # Whether to push the image
        # push: # optional, default is true
  build-health-monitor:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Build and push health-monitor
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: niklabh # optional
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }} # optional
        # Server address of Docker registry. If not set then will default to Docker Hub
        # registry: # optional
        # Docker repository to tag the image with
        repository: niklabh/polkassembly-health-monitor
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: latest # optional
        # Automatically tags the built image with the git reference as per the readme
        tag_with_ref: true # optional
        # Automatically tags the built image with the git short SHA as per the readme
        tag_with_sha: true # optional
        # Path to the build context
        path: health-monitor
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        # dockerfile: # optional
        # Sets the target stage to build
        # target: # optional
        # Always attempt to pull a newer version of the image
        always_pull: true # optional
        # Comma-delimited list of build-time variables
        # build_args: # optional
        # Comma-delimited list of images to consider as cache sources
        # cache_froms: # optional
        # Comma-delimited list of labels to add to the built image
        # labels: # optional
        # Adds labels with git repository information to the built image
        # add_git_labels: # optional
        # Whether to push the image
        # push: # optional, default is true
  build-node-watcher:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Build and push node-watcher
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: niklabh # optional
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }} # optional
        # Server address of Docker registry. If not set then will default to Docker Hub
        # registry: # optional
        # Docker repository to tag the image with
        repository: niklabh/polkassembly-node-watcher
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: latest # optional
        # Automatically tags the built image with the git reference as per the readme
        tag_with_ref: true # optional
        # Automatically tags the built image with the git short SHA as per the readme
        tag_with_sha: true # optional
        # Path to the build context
        path: node-watcher
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        # dockerfile: # optional
        # Sets the target stage to build
        # target: # optional
        # Always attempt to pull a newer version of the image
        always_pull: true # optional
        # Comma-delimited list of build-time variables
        # build_args: # optional
        # Comma-delimited list of images to consider as cache sources
        # cache_froms: # optional
        # Comma-delimited list of labels to add to the built image
        # labels: # optional
        # Adds labels with git repository information to the built image
        # add_git_labels: # optional
        # Whether to push the image
        # push: # optional, default is true

