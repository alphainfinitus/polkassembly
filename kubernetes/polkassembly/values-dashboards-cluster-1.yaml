# DASHBOARDS-CLUSTER-1 values for polkassembly.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

chainName: kusama
nodeSelector: {}


frontend:
  image:
    repository: docker.io/niklabh/polkassembly-kusama-test-front-end
    pullPolicy: Always

  service:
    type: NodePort
    annotations:
      cloud.google.com/app-protocols: '{"http":"HTTP", "https": "HTTPS"}'
    ports:
    - name: https
      port: 443
      targetPort: 80
    - name: http
      port: 80
      targetPort: 80

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "gce"
      kubernetes.io/ingress.global-static-ip-name: test-ip
      networking.gke.io/managed-certificates: test-polkassembly-io

    hosts:
      - host: test.polkassembly.io
        path: /*
        pathType: ImplementationSpecific
        serviceName: https

authServer:
  config:
    domainName: "test.polkassembly.io"
    PROPOSAL_BOT_USER_ID: "1"

chainDbWatcher:
  config:
    PROPOSAL_BOT_USER_ID: "1"
    CHAIN_DB_GRAPHQL_URL: "http://chain-db-open-server-service:4000"
    START_FROM: "0"

healthMonitor:
  config:
    # Listening Port
    PORT: 8034
    # polkassembly auth-server
    AUTH_SERVER: "http://auth-server-service:8010"
    # polkassembly hasura graphql service
    HASURA_SERVER: "http://hasura-service:8080"
    # polkassembly hasura chain-db service
    CHAIN_DB_WATCHER_SERVER: "http://chain-db-watcher-service:8019"
    # nomidot backend server ( CHAIN_DB_SERVER == CHAIN_DB_GRAPHQL_URL )
    CHAIN_DB_SERVER: "http://chain-db-open-server-service:4000"
    # nodewatcher server ( aka Prisma server )
    CHAIN_DB: "http://node-watcher-service:4466"
    # polkassembly frontend-service
    REACT_SERVER: "http://frontend-service:80"
    # polkadot rpc node
    ARCHIVE_NODE_ENDPOINT: "wss://kusama-rpc.polkadot.io"